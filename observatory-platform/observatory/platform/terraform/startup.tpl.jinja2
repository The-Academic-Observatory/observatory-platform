#!/usr/bin/env bash

# Set environment variables for Docker
export HOST_USER_ID=$(id -u airflow)
export HOST_GROUP_ID=$(id -g airflow)
export POSTGRES_HOSTNAME="${postgres_hostname}"
export POSTGRES_PASSWORD="sm://${project_id}/postgres_password"
export FERNET_KEY="sm://${project_id}/fernet_key"
export REDIS_HOSTNAME="${redis_hostname}"

{%- if is_airflow_main_vm %}
export AIRFLOW_UI_USER_PASSWORD="sm://${project_id}/airflow_ui_user_password"
export AIRFLOW_UI_USER_EMAIL="sm://${project_id}/airflow_ui_user_email"
{% set docker_containers="redis flower webserver scheduler worker_local"%}
{%- else %}
{% set docker_containers="worker_remote"%}
{%- endif %}

# Create airflow variables
names=('${join("' '", keys(airflow_variables))}')
values=('${join("' '", values(airflow_variables))}')

# Set environment variables for all airflow variables
for index in $${!names[*]};
do export AIRFLOW_VAR_$${names[$index]^^}="$${values[$index]}";
done

# Save google application credentials to file
sudo -u airflow bash -c "berglas access sm://${project_id}/google_application_credentials > /opt/observatory/google_application_credentials.json"

# Pull latest images
cd /opt/observatory/build/docker
sudo -u airflow bash -c "docker-compose -f docker-compose.observatory.yml pull {{ docker_containers }}"

# Hardcoded list of environment variables that need to be preserved
STANDARD_ENV_PRESERVE="HOST_GOOGLE_APPLICATION_CREDENTIALS,HOST_USER_ID,HOST_GROUP_ID"
# Preserve all environment variables that begin with AIRFLOW_VAR or AIRFLOW_CONN
ALL_ENV_PRESERVE=$(printenv | awk -v env_preserve="$STANDARD_ENV_PRESERVE" -F'=' '$0 ~ /AIRFLOW_VAR|AIRFLOW_CONN/ {printf "%s,", $1} END {print env_preserve}')

sudo -u airflow --preserve-env=$ALL_ENV_PRESERVE \
bash -c "docker-compose -f docker-compose.observatory.yml build {{ docker_containers }}"

# Hardcoded list of environment variables that need to be preserved
STANDARD_ENV_PRESERVE="HOST_USER_ID,HOST_GROUP_ID,POSTGRES_HOSTNAME,POSTGRES_PASSWORD,FERNET_KEY,REDIS_HOSTNAME,\
AIRFLOW_UI_USER_PASSWORD,AIRFLOW_UI_USER_EMAIL"
# Preserve all environment variables that begin with AIRFLOW_VAR or AIRFLOW_CONN
ALL_ENV_PRESERVE=$(printenv | awk -v env_preserve="$STANDARD_ENV_PRESERVE" -F'=' '$0 ~ /AIRFLOW_VAR|AIRFLOW_CONN/ {printf "%s,", $1} END {print env_preserve}')

sudo -u airflow -H --preserve-env=$ALL_ENV_PRESERVE \
bash -c "berglas exec -- docker-compose -f docker-compose.observatory.yml up -d {{ docker_containers }}"