# Copyright 2020 Curtin University
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Author: James Diprose

FROM apache/airflow:2.1.3-python3.8

ARG HOST_USER_ID
ARG HOST_GROUP_ID
ARG OBSERVATORY_HOME=/opt/observatory

# Install git which is required when installing dependencies with pip
USER root
RUN apt-get update -yqq && apt-get install git build-essential pigz mawk unzip openjdk-11-jre -y

# Set Java home
ENV JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64

# Install google cloud sdk as root user, used in ORCID telescope
RUN echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | \
tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | \
apt-key --keyring /usr/share/keyrings/cloud.google.gpg  add - && apt-get update -y && apt-get install google-cloud-sdk -y

# Change airflow user's user id to the hosts user id
RUN usermod -u ${HOST_USER_ID} airflow

# Change airflow user's group id to the hosts group id
RUN groupmod -g ${HOST_GROUP_ID} airflow

# Install Python dependencies for Observatory Platform as airflow user
USER airflow

# Install dependencies for all projects
{% for package in config.python_packages %}
# Set working directory for {{ package.name }}
ARG WORKING_DIR=/opt/{{ package.name }}
WORKDIR ${WORKING_DIR}

# Change owner of directory to airflow
USER root
RUN chown -R airflow:airflow ${WORKING_DIR}
USER airflow
{% if package.type == 'editable' %}

# Install editable package: {{ package.name }}
COPY ./requirements.{{ package.name }}.txt requirements.txt
RUN pip3 install -r requirements.txt --user

{% elif package.type == 'sdist' %}

# Install sdist package: {{ package.name }}
COPY ./{{ package.docker_package }} {{ package.docker_package }}
RUN pip3 install {{ package.docker_package }} --user

{% elif package.type == 'pypi' %}

# Install PyPI package: {{ package.name }}
RUN pip3 install {{ package.docker_package }} --user

{%- endif -%}

# Set working directory back to airflow home
WORKDIR ${AIRFLOW_HOME}
{% endfor %}

# Copy entry point scripts which install new dependencies at runtime and the Observatory Platform Python package
USER root
COPY entrypoint-root.sh /entrypoint-root.sh
COPY entrypoint-airflow.sh /entrypoint-airflow.sh
RUN chmod +x /entrypoint-root.sh
RUN chmod +x /entrypoint-airflow.sh

ENTRYPOINT ["/entrypoint-root.sh"]
