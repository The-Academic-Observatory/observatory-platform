"""
    Observatory API

    The REST API for managing and accessing data from the Observatory Platform.   # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: agent@observatory.academy
    Generated by: https://openapi-generator.tech
"""


import unittest

import observatory.api.client
from observatory.api.client.api.observatory_api import ObservatoryApi  # noqa: E501


class TestObservatoryApi(unittest.TestCase):
    """ObservatoryApi unit test stubs"""

    def setUp(self):
        self.api = ObservatoryApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_delete_dataset(self):
        """Test case for delete_dataset

        delete a Dataset  # noqa: E501
        """
        pass

    def test_delete_dataset_release(self):
        """Test case for delete_dataset_release

        delete a DatasetRelease  # noqa: E501
        """
        pass

    def test_delete_dataset_type(self):
        """Test case for delete_dataset_type

        delete a DatasetType  # noqa: E501
        """
        pass

    def test_delete_organisation(self):
        """Test case for delete_organisation

        delete an Organisation  # noqa: E501
        """
        pass

    def test_delete_table_type(self):
        """Test case for delete_table_type

        delete a TableType  # noqa: E501
        """
        pass

    def test_delete_workflow(self):
        """Test case for delete_workflow

        delete a Workflow  # noqa: E501
        """
        pass

    def test_delete_workflow_type(self):
        """Test case for delete_workflow_type

        delete a WorkflowType  # noqa: E501
        """
        pass

    def test_get_bigquery_bytes_processed(self):
        """Test case for get_bigquery_bytes_processed

        get a BigQueryBytesProcessed  # noqa: E501
        """
        pass

    def test_get_dataset(self):
        """Test case for get_dataset

        get a Dataset  # noqa: E501
        """
        pass

    def test_get_dataset_release(self):
        """Test case for get_dataset_release

        get a DatasetRelease  # noqa: E501
        """
        pass

    def test_get_dataset_releases(self):
        """Test case for get_dataset_releases

        Get a list of DatasetRelease objects  # noqa: E501
        """
        pass

    def test_get_dataset_type(self):
        """Test case for get_dataset_type

        get a DatasetType  # noqa: E501
        """
        pass

    def test_get_dataset_types(self):
        """Test case for get_dataset_types

        Get a list of DatasetType objects  # noqa: E501
        """
        pass

    def test_get_datasets(self):
        """Test case for get_datasets

        Get a list of Datasets  # noqa: E501
        """
        pass

    def test_get_organisation(self):
        """Test case for get_organisation

        get an Organisation  # noqa: E501
        """
        pass

    def test_get_organisations(self):
        """Test case for get_organisations

        Get a list of Organisations  # noqa: E501
        """
        pass

    def test_get_table_type(self):
        """Test case for get_table_type

        get a TableType  # noqa: E501
        """
        pass

    def test_get_table_types(self):
        """Test case for get_table_types

        Get a list of TableType objects  # noqa: E501
        """
        pass

    def test_get_workflow(self):
        """Test case for get_workflow

        get a Workflow  # noqa: E501
        """
        pass

    def test_get_workflow_type(self):
        """Test case for get_workflow_type

        get a WorkflowType  # noqa: E501
        """
        pass

    def test_get_workflow_types(self):
        """Test case for get_workflow_types

        Get a list of WorkflowType objects  # noqa: E501
        """
        pass

    def test_get_workflows(self):
        """Test case for get_workflows

        Get a list of Workflow objects  # noqa: E501
        """
        pass

    def test_post_bigquery_bytes_processed(self):
        """Test case for post_bigquery_bytes_processed

        create a BigQueryBytesProcessed  # noqa: E501
        """
        pass

    def test_post_dataset(self):
        """Test case for post_dataset

        create a Dataset  # noqa: E501
        """
        pass

    def test_post_dataset_release(self):
        """Test case for post_dataset_release

        create a DatasetRelease  # noqa: E501
        """
        pass

    def test_post_dataset_type(self):
        """Test case for post_dataset_type

        create a DatasetType  # noqa: E501
        """
        pass

    def test_post_organisation(self):
        """Test case for post_organisation

        create an Organisation  # noqa: E501
        """
        pass

    def test_post_table_type(self):
        """Test case for post_table_type

        create a TableType  # noqa: E501
        """
        pass

    def test_post_workflow(self):
        """Test case for post_workflow

        create a Workflow  # noqa: E501
        """
        pass

    def test_post_workflow_type(self):
        """Test case for post_workflow_type

        create a WorkflowType  # noqa: E501
        """
        pass

    def test_put_dataset(self):
        """Test case for put_dataset

        create or update a Dataset  # noqa: E501
        """
        pass

    def test_put_dataset_release(self):
        """Test case for put_dataset_release

        create or update a DatasetRelease  # noqa: E501
        """
        pass

    def test_put_dataset_type(self):
        """Test case for put_dataset_type

        create or update a DatasetType  # noqa: E501
        """
        pass

    def test_put_organisation(self):
        """Test case for put_organisation

        create or update an Organisation  # noqa: E501
        """
        pass

    def test_put_table_type(self):
        """Test case for put_table_type

        create or update a TableType  # noqa: E501
        """
        pass

    def test_put_workflow(self):
        """Test case for put_workflow

        create or update a Workflow  # noqa: E501
        """
        pass

    def test_put_workflow_type(self):
        """Test case for put_workflow_type

        create or update a WorkflowType  # noqa: E501
        """
        pass


if __name__ == "__main__":
    unittest.main()
