"""
    Observatory API

    The REST API for managing and accessing data from the Observatory Platform.   # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: agent@observatory.academy
    Generated by: https://openapi-generator.tech
"""


import datetime
import sys
import unittest

import observatory.api.client
from observatory.api.client.exceptions import ApiAttributeError, ApiTypeError
from observatory.api.client.model.big_query_bytes_processed import (
    BigQueryBytesProcessed,
)


class TestBigQueryBytesProcessed(unittest.TestCase):
    """BigQueryBytesProcessed unit test stubs"""

    def testBigQueryBytesProcessed(self):
        """Test BigQueryBytesProcessed"""

        class Configuration:
            def __init__(self):
                self.discard_unknown_keys = True

        dt = datetime.datetime.utcnow()
        BigQueryBytesProcessed(
            id=1,
            project="project",
            total=2,
            date="2021-01-01",
            _configuration=Configuration(),
            unknown="var",
        )

        BigQueryBytesProcessed(
            id=1,
            project="project",
            total=2,
            date="2021-01-01",
            _configuration=None,
        )

        self.assertRaises(
            ApiAttributeError,
            BigQueryBytesProcessed,
            project="project",
            total=2,
            date="2021-01-01",
            _configuration=Configuration(),
            unknown="var",
            created=dt,
            modified=dt,
        )

        # Invalid argument
        with self.assertRaises(ApiTypeError):
            BigQueryBytesProcessed("hello")

        # Invalid keyword argument
        with self.assertRaises(ApiAttributeError):
            BigQueryBytesProcessed(hello="world")

        self.assertRaises(ApiTypeError, BigQueryBytesProcessed._from_openapi_data, "hello")

        # Check from_openapi_data no throw
        BigQueryBytesProcessed._from_openapi_data(hello="world", _configuration=Configuration())

        BigQueryBytesProcessed._from_openapi_data(project="project")


if __name__ == "__main__":
    unittest.main()
