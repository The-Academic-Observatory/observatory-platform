swagger: '2.0'
info:
  title: Observatory API
  description: |
    The REST API for managing and accessing data from the Observatory Platform.
  version: 1.0.0
  contact:
    email: agent@observatory.academy
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html


host: localhost:5002
schemes:
  - https
produces:
  - application/json
securityDefinitions:
  # This section configures basic authentication with an API key.
  api_key:
    type: "apiKey"
    name: "key"
    in: "query"
security:
  - api_key: []


tags:
- name: Observatory
  description: the Observatory API



paths:
  /v1/dataset_release:
    get:
      tags:
      - Observatory
      summary: get a DatasetRelease
      operationId: get_dataset_release
      description: |
        Get the details of a DatasetRelease by passing it's id.
      produces:
      - application/json
      parameters:
      - in: query
        name: id
        description: DatasetRelease id
        required: true
        type: integer
      responses:
        200:
          description: the fetched DatasetRelease
          schema:
            $ref: '#/definitions/DatasetRelease'
        400:
          description: bad input parameter
        401:
          description: API key is missing or invalid
          $ref: '#/responses/UnauthorizedError'
    post:
      tags:
      - Observatory
      summary: create a DatasetRelease
      operationId: post_dataset_release
      description: |
        Create a DatasetRelease by passing a DatasetRelease object, without an id.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: DatasetRelease to create
        required: true
        schema:
          $ref: '#/definitions/DatasetRelease'
      responses:
        201:
          description: DatasetRelease created, returning the created object with an id
          schema:
            $ref: '#/definitions/DatasetRelease'
        401:
          description: API key is missing or invalid
          $ref: '#/responses/UnauthorizedError'
    put:
      tags:
      - Observatory
      summary: create or update a DatasetRelease
      operationId: put_dataset_release
      description: |
        Create a DatasetRelease by passing a DatasetRelease object, without an id. Update an existing DatasetRelease by
        passing a DatasetRelease object with an id.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: DatasetRelease to create or update
        required: true
        schema:
          $ref: '#/definitions/DatasetRelease'
      responses:
        200:
          description: DatasetRelease updated
          schema:
            $ref: '#/definitions/DatasetRelease'
        201:
          description: DatasetRelease created, returning the created object with an id
          schema:
            $ref: '#/definitions/DatasetRelease'
        401:
          description: API key is missing or invalid
          $ref: '#/responses/UnauthorizedError'
    delete:
      tags:
      - Observatory
      summary: delete a DatasetRelease
      operationId: delete_dataset_release
      description: |
        Delete a DatasetRelease by passing it's id.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: id
        description: DatasetRelease id
        required: true
        type: integer
      responses:
        200:
          description: DatasetRelease deleted
        401:
          description: API key is missing or invalid
          $ref: '#/responses/UnauthorizedError'

  /v1/dataset_releases:
    get:
      tags:
      - Observatory
      summary: Get a list of DatasetRelease objects
      operationId: get_dataset_releases
      description: |
        Get a list of DatasetRelease objects
      produces:
      - application/json
      parameters:
      - in: query
        name: dag_id
        description: the dag_id to fetch release info for
        required: false
        type: string
      - in: query
        name: dataset_id
        description: the dataset_id to fetch release info for
        required: false
        type: string
      responses:
        200:
          description: a list of DatasetRelease objects
          schema:
            type: array
            items:
              $ref: '#/definitions/DatasetRelease'
        400:
          description: bad input parameter
        401:
          description: API key is missing or invalid
          $ref: '#/responses/UnauthorizedError'

definitions:
  DatasetRelease:
    type: object
    properties:
      id:
        type: integer
      dag_id:
        type: string
        example: "doi_workflow"
      dataset_id:
        type: string
        example: "doi"
      dag_run_id:
        type: string
        example: "YYYY-MM-DDTHH:mm:ss.ssssss"
      data_interval_start:
        type: string
        format: date-time
        example: 2020-01-02T20:01:05Z
        x-nullable: true
      data_interval_end:
        type: string
        format: date-time
        example: 2020-01-02T20:01:05Z
        x-nullable: true
      snapshot_date:
        type: string
        format: date-time
        example: 2020-01-02T20:01:05Z
        x-nullable: true
      partition_date:
        type: string
        format: date-time
        example: 2020-01-02T20:01:05Z
        x-nullable: true
      changefile_start_date:
        type: string
        format: date-time
        example: 2020-01-02T20:01:05Z
        x-nullable: true
      changefile_end_date:
        type: string
        format: date-time
        example: 2020-01-02T20:01:05Z
        x-nullable: true
      sequence_start:
        type: integer
        example: 1
        x-nullable: true
      sequence_end:
        type: integer
        example: 3
        x-nullable: true
      created:
        type: string
        format: date-time
        readOnly: true
      modified:
        type: string
        format: date-time
        readOnly: true
      extra:
        type: object
        example: {'view-id': '830'}
        minLength: 1
        maxLength: 512
        x-nullable: true

responses:
  UnauthorizedError:
    description: API key is missing or invalid
    headers:
      WWW_Authenticate:
        type: string