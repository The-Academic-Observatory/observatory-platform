version: "3.8"
x-environment: &environment
  AIRFLOW__CORE__EXECUTOR: CeleryExecutor
  AIRFLOW__CORE__SQL_ALCHEMY_CONN: "postgres://airflow:${POSTGRES_PASSWORD}@${POSTGRES_HOSTNAME}:5432/airflow"
  AIRFLOW__CORE__FERNET_KEY: "${FERNET_KEY}"
  AIRFLOW__CORE__AIRFLOW_HOME: "/opt/airflow/"
  AIRFLOW__CORE__LOAD_EXAMPLES: "False"
  AIRFLOW__CORE__LOAD_DEFAULT_CONNECTIONS: "False"
  AIRFLOW__WEBSERVER__RBAC: "True"
  AIRFLOW__CELERY__BROKER_URL: "redis://:@${REDIS_HOSTNAME}:6379/0"
  AIRFLOW__CELERY__RESULT_BACKEND: "db+postgresql://airflow:${POSTGRES_PASSWORD}@${POSTGRES_HOSTNAME}:5432/airflow"
  AIRFLOW__SECRETS__BACKEND: "airflow.contrib.secrets.gcp_secrets_manager.CloudSecretsManagerBackend"
  AIRFLOW__SECRETS__BACKEND_KWARGS: "{'connections_prefix': 'airflow-connections', 'variables_prefix': 'airflow-variables', 'sep': '-'}"
  GOOGLE_APPLICATION_CREDENTIALS: "/run/secrets/google_application_credentials.json"
  AO_HOME: ${AO_HOME}

x-volumes: &volumes
  - "${HOST_LOGS_PATH}:/opt/airflow/logs"
  - "${HOST_DAGS_PATH}:/opt/airflow/dags"
  - "${HOST_DATA_PATH}:/opt/observatory/data"
  - "${HOST_PACKAGE_PATH}:/opt/observatory/academic-observatory"

x-build: &build
  context: .
  dockerfile: Dockerfile.observatory
  args:
    - HOST_USER_ID=${HOST_USER_ID}

services:
  redis:
    image: "redis:6.0.5"
    restart: always
    ports:
      - 6379:6379

  flower:
    image: apache/airflow:1.10.10-2-python3.7
    environment: *environment
    restart: always
    depends_on:
      - redis
    ports:
      - 5555:5555
    command: flower

  init_db:
    image: apache/airflow:1.10.10-2-python3.7
    environment: *environment
    volumes: *volumes
    restart: on-failure
    entrypoint: /bin/bash
    command: >
      -c "airflow list_users || (airflow initdb
      && airflow create_user --role Admin --username airflow --password airflow -e airflow@airflow.com -f airflow -l airflow)"

  webserver:
    build: *build
    environment: *environment
    volumes: *volumes
    restart: always
    depends_on:
      - redis
    secrets:
      - google_application_credentials.json
    ports:
      - 8080:8080
    command: webserver
    healthcheck:
      test: ["CMD-SHELL", "[ -f /opt/airflow/airflow-webserver.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 3

  scheduler:
    build: *build
    environment: *environment
    volumes: *volumes
    restart: always
    depends_on:
      - webserver
    secrets:
      - google_application_credentials.json
    command: scheduler

  worker_local:
    build: *build
    environment: *environment
    volumes: *volumes
    restart: always
    depends_on:
      - scheduler
    secrets:
      - google_application_credentials.json
    command: worker -q default

  worker_remote:
    build: *build
    environment: *environment
    volumes: *volumes
    restart: always
    secrets:
      - google_application_credentials.json
    command: worker -q remote_queue

secrets:
  google_application_credentials.json:
    file: ${HOST_GOOGLE_APPLICATION_CREDENTIALS}